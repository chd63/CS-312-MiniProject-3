<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
</head>
<body class="container">

<header>
  <%- include('../partials/header'); %>
  <nav>
    <a href="/pages/signup">Sign Up</a> | <a href="/pages/signin">Sign In</a> 
  </nav>
</header>

<main>
  <div class="blogs">
    <h1>BLOG</h1>
    <p>Please enter a blog post</p>

    <% if (!user || !user.id || !user.name) { %>
      <div class="alert alert-danger" style="color: red;">
        Warning: User has not logged in.
      </div>
    <% } %>

    <form name="blogPost" method="POST" action="/blog/add">
      <% if (user && user.id && user.name) { %>
        <input type="hidden" name="id" value="<%= user.id %>">
        <input type="hidden" name="name" value="<%= user.name %>">
      <% } else { %>
        <p>Please log in to submit a blog post.</p>
      <% } %>
      <table>
        <tr>
          <td>TITLE: </td>
          <td><input type="text" name="title"></td>
        </tr>
        <tr>
          <td>COMMENT: </td>
          <td><input type="text" name="body"></td>
        </tr>
        <tr>
          <td colspan="2"><input type="submit" value="add"></td>
        </tr>            
      </table>
    </form>

    <div id="blog-list"></div> 
  </div>
</main>

<footer>
  <%- include('../partials/footer'); %>
</footer>

<script>
  async function fetchBlogPosts() {
    try {
      const response = await fetch('/api/blog');
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const blogposts = await response.json();
      displayBlogPosts(blogposts);
    } catch (error) {
      console.error('There was a problem with the fetch operation:', error);
    }
  }

  function displayBlogPosts(blogposts) {
    const blogList = document.getElementById('blog-list');
    blogList.innerHTML = ''; // Clear existing content

    // Store user ID if available
    const userId = '<%= user ? user.id : "" %>';

    blogposts.forEach(post => {
      const postElement = document.createElement('div');
      postElement.className = 'blog-post';
      postElement.innerHTML = `
        <h3>Title: ${post.title}</h3>
        <p>Name: ${post.creator_name}</p>
        <p>Comment: ${post.body}</p>
        <p>${new Date(post.created_at).toLocaleString()}</p>
        <div id="edit-form-${post.blog_id}" class="edit-form" style="display:none;">
          <form method="POST" action="/blog/edit">
            <input type="hidden" name="id" value="${post.blog_id}">
            <input type="hidden" name="user_id" value="${post.creator_user_id}"> 
            <input type="hidden" name="name" value="${post.creator_name}"> 
            <label for="title">Title:</label>
            <input type="text" name="title" id="title-${post.blog_id}" value="${post.title}">
            <label for="comment">Comment:</label>
            <textarea name="body" id="comment-${post.blog_id}">${post.body}</textarea>
            <button type="submit">Save</button>
            <button type="button" onclick="hideEditForm('${post.blog_id}')">Cancel</button>
          </form>
        </div>
      `;
      //console.log("User ID: ", userId);
        //console.log("Post User ID: ", post.creator_user_id);
        //console.log("Post", post)
      // Show the edit button only if the logged-in user is the creator of the post
      if (userId == post.creator_user_id) {
        console.log("this should be happening");
        postElement.innerHTML += `<button onclick="showEditForm('${post.blog_id}', '${post.title}', '${post.creator_name}', '${post.body}')">Edit</button>`;
        postElement.innerHTML += `<button onclick="showDeleteConfirmation('${post.blog_id}', '${post.title}', '${post.creator_name}', '${post.creator_user_id}')">Delete</button>`;
      }

      blogList.appendChild(postElement);
    });
  }

  document.addEventListener('DOMContentLoaded', fetchBlogPosts);

  function showEditForm(id, title, name, comment) {
    // Show the edit form
    var form = document.getElementById('edit-form-' + id);
    form.style.display = 'block';

    // Populate form fields
    document.getElementById('title-' + id).value = title;
    document.getElementById('name-' + id).value = name;
    document.getElementById('comment-' + id).value = comment;
  }

  function showDeleteConfirmation(id, title, name, user_id) {
    const confirmDelete = confirm(`Are you sure you want to delete the post titled "${title}"?`);

    console.log(id, title, name, user_id);
    if (confirmDelete) {
      // Perform the delete request using fetch
      fetch('/blog/delete', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
        id: id, 
        user: {
          name: name,  
          id: user_id  
        }
      }), 
      })
      fetch('/reload', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ user_id: user_id, name: name })
      })
      
      .catch(error => {
      });

      window.location.href = '/';

      fetch('/reload', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ user_id: user_id, name: name })
      });
      
    }
  }

  function hideEditForm(id) {
    // Hide the edit form
    var form = document.getElementById('edit-form-' + id);
    form.style.display = 'none';
  }
</script>

</body>
</html>